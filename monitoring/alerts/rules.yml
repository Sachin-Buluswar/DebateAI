groups:
  - name: eris-debate-health
    interval: 30s
    rules:
      # Application availability
      - alert: ApplicationDown
        expr: up{job="eris-debate"} == 0
        for: 2m
        labels:
          severity: critical
          team: backend
        annotations:
          summary: "Eris Debate application is down"
          description: "The Eris Debate application has been down for more than 2 minutes."
          runbook: "https://wiki.atlasdebate.com/runbooks/application-down"

      # High memory usage
      - alert: HighMemoryUsage
        expr: (nodejs_heap_size_used_bytes{job="eris-debate"} / nodejs_heap_size_total_bytes{job="eris-debate"}) * 100 > 90
        for: 5m
        labels:
          severity: warning
          team: backend
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 90% for more than 5 minutes. Current: {{ $value }}%"
          runbook: "https://wiki.atlasdebate.com/runbooks/high-memory"

      # High CPU usage
      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total{job="eris-debate"}[5m]) * 100 > 80
        for: 10m
        labels:
          severity: warning
          team: backend
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 10 minutes. Current: {{ $value }}%"

  - name: eris-debate-performance
    interval: 1m
    rules:
      # Slow API responses
      - alert: SlowAPIResponses
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job="eris-debate"}[5m])) by (le, route)) > 2
        for: 5m
        labels:
          severity: warning
          team: backend
        annotations:
          summary: "API responses are slow"
          description: "95th percentile response time for {{ $labels.route }} is above 2s: {{ $value }}s"

      # High error rate
      - alert: HighErrorRate
        expr: sum(rate(errors_total{job="eris-debate"}[5m])) > 10
        for: 5m
        labels:
          severity: warning
          team: backend
        annotations:
          summary: "High error rate detected"
          description: "Error rate is above 10 errors per second for 5 minutes"

      # AI service errors
      - alert: AIServiceErrors
        expr: sum(rate(errors_total{job="eris-debate",error_type=~"AI_SERVICE_ERROR|TTS_SERVICE_ERROR"}[5m])) > 1
        for: 5m
        labels:
          severity: critical
          team: backend
        annotations:
          summary: "AI service errors detected"
          description: "AI services (OpenAI/ElevenLabs) are experiencing errors: {{ $value }} errors/sec"

  - name: eris-debate-websocket
    interval: 30s
    rules:
      # Too many WebSocket connections
      - alert: HighWebSocketConnections
        expr: connections_active{job="eris-debate"} > 5000
        for: 5m
        labels:
          severity: warning
          team: backend
        annotations:
          summary: "High number of WebSocket connections"
          description: "Active WebSocket connections exceed 5000: {{ $value }}"

      # WebSocket connection spike
      - alert: WebSocketConnectionSpike
        expr: rate(connections_active{job="eris-debate"}[5m]) > 100
        for: 2m
        labels:
          severity: warning
          team: backend
        annotations:
          summary: "Rapid increase in WebSocket connections"
          description: "WebSocket connections are increasing rapidly: {{ $value }} connections/sec"

  - name: eris-debate-business
    interval: 1m
    rules:
      # Low debate activity
      - alert: LowDebateActivity
        expr: sum(increase(debate_sessions_total{job="eris-debate"}[1h])) < 1
        for: 2h
        labels:
          severity: info
          team: product
        annotations:
          summary: "Low debate activity"
          description: "Less than 1 debate started in the last hour for 2 consecutive hours"

      # Debate completion rate
      - alert: LowDebateCompletionRate
        expr: |
          sum(increase(debate_sessions_total{job="eris-debate",status="completed"}[24h])) /
          sum(increase(debate_sessions_total{job="eris-debate"}[24h])) < 0.5
        for: 1h
        labels:
          severity: warning
          team: product
        annotations:
          summary: "Low debate completion rate"
          description: "Less than 50% of debates are being completed: {{ $value }}%"

  - name: eris-debate-dependencies
    interval: 1m
    rules:
      # Database connection issues
      - alert: DatabaseConnectionFailure
        expr: probe_success{job="blackbox",target="postgresql://supabase"} == 0
        for: 2m
        labels:
          severity: critical
          team: backend
        annotations:
          summary: "Database connection failure"
          description: "Cannot connect to Supabase database for more than 2 minutes"

      # OpenAI API issues
      - alert: OpenAIAPIDown
        expr: probe_success{job="blackbox",target="https://api.openai.com/v1/models"} == 0
        for: 5m
        labels:
          severity: critical
          team: backend
        annotations:
          summary: "OpenAI API is unreachable"
          description: "Cannot reach OpenAI API for more than 5 minutes"

      # ElevenLabs API issues
      - alert: ElevenLabsAPIDown
        expr: probe_success{job="blackbox",target="https://api.elevenlabs.io/v1/models"} == 0
        for: 5m
        labels:
          severity: critical
          team: backend
        annotations:
          summary: "ElevenLabs API is unreachable"
          description: "Cannot reach ElevenLabs API for more than 5 minutes"

  - name: eris-debate-capacity
    interval: 1m
    rules:
      # Rate limiting triggered
      - alert: RateLimitingActive
        expr: sum(increase(http_requests_total{job="eris-debate",status="429"}[5m])) > 100
        for: 5m
        labels:
          severity: warning
          team: backend
        annotations:
          summary: "High rate of rate-limited requests"
          description: "More than 100 requests rate-limited in 5 minutes"

      # Memory leak detection
      - alert: PossibleMemoryLeak
        expr: |
          (nodejs_heap_size_used_bytes{job="eris-debate"} - nodejs_heap_size_used_bytes{job="eris-debate"} offset 1h) /
          nodejs_heap_size_used_bytes{job="eris-debate"} offset 1h > 0.5
        for: 30m
        labels:
          severity: warning
          team: backend
        annotations:
          summary: "Possible memory leak detected"
          description: "Memory usage increased by more than 50% in the last hour"